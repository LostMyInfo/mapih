// @ts-check

/**
 * @typedef {Object} AnthropicMessage
 * @property {string} id - Unique object identifier
 * @property {AnthropicContentBlock[]} content - Content generated by the model
 * @property {string} model - The model that handled the request
 * @property {string} role - Will always be 'assistant'
 * @property {?string} stop_reason - The reason that we stopped
 * @property {?string} stop_sequence - Which custom stop sequence was generated, if any
 * @property {string} type - Will always be 'message'
 * @property {AnthropicUsage} usage - Billing and rate-limit usage
 */

/**
 * @typedef {Object} AnthropicContentBlock
 * @property {string} text
 * @property {string} type - Always 'text'
 */

/**
 * @typedef {Object} AnthropicTextBlock
 * @property {string} text
 * @property {string} [type] - Always 'text'
 */

/**
 * @typedef {Object} AnthropicImageBlockParam
 * @property {AnthropicImageBlockParamSource} source
 * @property {string} [type] - Always 'image'
 */

/**
 * @typedef {Object} AnthropicImageBlockParamSource
 * @property {string} data
 * @property {string} media_type - 'image/jpeg', 'image/png', 'image/gif', 'image/webp'
 * @property {string} [type] - Always 'base64'
 */

/**
 * @typedef {Object} AnthropicUsage
 * @property {number} input_tokens - The number of input tokens which were used
 * @property {number} output_tokens - The number of output tokens which were used
 */

/**
 * @typedef {Object} AnthropicMessageParam
 * @property {string | Array<AnthropicTextBlock | AnthropicImageBlockParam>} content
 * @property {string} role - 'user' or 'assistant'
 */

/**
 * @typedef {Object} AnthropicToolProperty
 * @property {string} type - The type of the property
 * @property {string} [description] - Optional description of the property
 * @property {string[]} [enum] - Optional array of allowed enum values
 * @property {AnthropicToolProperty} [items] - Optional property for array items
 * @property {Object.<string, AnthropicToolProperty>} [properties] - Optional nested properties
 * @property {string[]} [required] - Optional array of required property names
 */

/**
 * @template {Object.<string, AnthropicToolProperty>} [T=Object.<string, AnthropicToolProperty>]
 * @typedef {Object} AnthropicToolInputSchema
 * @property {T} properties - The properties of the input schema
 * @property {string[]} [required] - Optional array of required property names
 */

/**
 * @template {Object.<string, AnthropicToolProperty>} [T=Object.<string, AnthropicToolProperty>]
 * @typedef {Object} AnthropicTool
 * @property {string} name - The name of the tool
 * @property {string} description - The description of the tool
 * @property {AnthropicToolInputSchema<T>} input_schema - The input schema for the tool
 * @property {?Object} [cache_control] - Optional cache control settings
 * @property {string} [cache_control.type] - The type of cache control
 */

/**
 * @typedef {Object} AnthropicToolChoice
 * @property {"auto" | "none"} type - The type of tool choice
 * @property {Object} [tool] - Optional specific tool configuration
 * @property {string} [tool.name] - The name of the specific tool to use
 */

/**
 * @typedef {Object} AnthropicToolChoiceFunction
 * @property {"function"} type - Indicates that this is a function-type tool choice
 * @property {string} name - The name of the function to call
 */

/**
 * @typedef {AnthropicToolChoice | AnthropicToolChoiceFunction | "auto" | "none"} AnthropicToolChoiceOption
 */
